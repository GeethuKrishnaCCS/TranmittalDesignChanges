import { WebPartContext } from "@microsoft/sp-webpart-base";

export interface IOutboundTransmittalV2Props {
  description: string;
  isDarkTheme: boolean;
  environmentMessage: string;
  hasTeamsContext: boolean;
  userDisplayName: string;
  projectInformationListName: string;
  context: WebPartContext;
  siteUrl: string;
  hubSiteUrl: string;
  companiesListName: string;
  hubSite: string;
  contactListName: string;
  publishDocumentLibraryName: string;
  transmittalCodeSettingsListName: string;
  sourceDocumentLibraryName: string;
  maxFileSize: string;
  transmittalIdSettingsListName: string;
  outboundTransmittalHeaderListName: string;
  outBoundTransmittalSitePage: string;
  outboundTransmittalDetailsListName: string;
  outboundAdditionalDocumentsListName: string;
  userMessageSettings: string;
  transmittalHistoryLogList: string;
  notificationPrefListName: string;
  emailNotificationSettings: string;
  documentIndex: string;
  masterListName: string;
  modalBGColor: string;
  permissionMatrixSettings: string;
  accessGroupDetailsListName: string;
}
export interface IOutboundTransmittalV2State {
  statusMessage: IMessage;
  checkedItems: any;
  currentUser: number;
  transmitToKey: string;
  transmitTo: string;
  hideCustomer: string;
  hideSubContractor: string;
  selectedKeys: string;
  isCalloutVisible: boolean;
  customerContChBx: string;
  toggleMultiline: boolean;
  commentMultiline: boolean;
  showGrid: boolean;
  showExternalGrid: boolean;
  //dropdowns
  subContractorKey: string;
  subContractor: string;
  transmitForKey: string;
  transmitFor: string;
  hideUnlockButton: string;
  subContractorItems: any[];
  transmitForItems: any[];
  //listName
  projectInformation: any[];
  projectName: string;
  customerName: string;
  transmittalNo: string;
  contacts: any[];
  isChecked: boolean;
  //contactsInTo
  selectedContactsTo: string;
  selectedContactsCC: string;
  selectedContactsToDisplayName: string;
  selectedContactsCCDisplayName: string;
  CC: string;
  approvalLifeCycle: string;
  projectNumber: string;
  dueDate: Date;
  hideDueDate: boolean;
  //Searchdocuments
  searchDocuments: any[];
  items: any[];
  searchDiv: string;
  tempArrayForPublishedDocumentGrid: any[];
  tempArrayForExternalDocumentGrid: any[];
  publishDocumentsItemsForGrid: any[];
  comments: string;
  itemsForGrid: any[];
  itemsForExternalGrid: any[];
  fileSize: any;
  fileSizeDiv: boolean;
  searchText: string;
  //previewDiv
  previewDiv: boolean;
  showReviewModal: boolean;
  externalComments: string;
  notes: string;
  contactsForSearch: any[];
  //transmittalId generation
  transmittalType: string;
  incrementSequenceNumber: string;
  transmittalID: string;
  customerId: number;
  outboundTransmittalHeaderId: any;
  contactCCDisplay: string;
  contactToDisplay: string;
  publishedDocumentArray: any[];
  documentSelect: string;
  documentSelectedDiv: boolean;
  dropDownReadonly: boolean;
  transmittalTypekey: string;
  cancelConfirmMsg: string;
  confirmCancelDialog: boolean;
  confirmDeleteDialog: boolean;
  currentOutboundDetailItem: any[];
  currentOutboundAdditionalItem: any[];
  sendAsSharedFolder: boolean;
  recieveInSharedFolder: boolean;
  sendAsMultipleFolder: boolean;
  hideButtonAfterSubmit: string;
  recallConfirmMsgDiv: string;
  recallConfirmMsg: boolean;
  outboundRecallConfirmation: string;
  approvalRequired: boolean;
  notificationPreference: string;
  tempDocIndexIDForDelete: number;
  subContractorLabel: string;
  subContractorDrpDwn: string;
  totalNoOfFiles: string;
  deleteConfirmation: string;
  projectDocumentSelectKey: string;
  hideGridAddButton: boolean;
  sourceDocumentItem: any;
  sendAsMultipleEmailCheckBoxDiv: string;
  transmitTypeForDocument: string;
  transmitTypeForLetter: string;
  transmitTypeForDefault: string;
  webpartView: string;
  loaderDisplay: string;
  accessDeniedMsgBar: string;
  normalMsgBar: string;
  fileSizeDivForRebind: string;
  spinnerDiv: string;
  uploadDocumentError: string;
  selectedContactsTo1: any[];
  selectedContactsToCCRebind: any[];
  dueDateForBindingApprovalLifeCycle: Date;
  contractNumber: string;
  legalId: string;
  coverLetterConfirmBox: string;
  coverLetterDialog: boolean;
  coverLetterNeeded: boolean;
  internalCCContacts: any[];
  internalCCContactsDisplayName: any;
  internalCCContactsDisplayNameForPreview: any;
  internalContactsEmail: any;
  vendorarray: any;
  selectedVendor: any;
  //searching contacts
  searchContactsTo: any[];
  selectedContactsToName: any[];
  searchContactsCC: any[];
  selectedContactsCCName: any[];
  //displaying to and cc
  divForToAndCC: string;
  divForToAndCCSearch: string;
  TypeOFDelete:string;
}
//for msg bar
export interface IMessage {
  isShowMessage: boolean;
  messageType: number;
  message: string;
}
